# -*- coding: utf-8 -*-
"""ML_Exp1A.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/195Oa1si4xuPhFjuFDKXbIPdRY0MhiuDf
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression

# Load data from CSV file
df=pd.read_csv("data_train.csv")


# Split data into features (X) and target (y)
X = df[['x']].values
y = df['y'].values

# Split data into training and testing sets (80-20%)
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=22)

# Initialize LinearRegression model
model = LinearRegression()

# Fit the model to the training data
model.fit(X_train, y_train)

# Access the intercept and coefficient
intercept = model.intercept_
coefficient = model.coef_[0]
print("Intercept train theta0 = ",intercept) #b
print("Coeff. train theta1 = ",coefficient) #m


model.fit(X_test,y_test)
interceptt = model.intercept_
coefficientt = model.coef_[0]
print("Intercept test theta0 = ",interceptt) #b
print("Coeff. test theta1 = ",coefficientt) #m

# Plot the data and the linear regression line
plt.scatter(X_train, y_train, label='Training Data')
plt.scatter(X_test, y_test, label='Testing Data', color='r')
plt.plot(X, model.predict(X), color='black', label='Best Fit')
plt.xlabel('x')
plt.ylabel('y')
plt.title('Linear Regression using Close-Form Solution')
plt.legend()
plt.show()

model.predict([[5]])

model.coef_

model.intercept_

#Verifying the prediction nearly being equal
3.20632937 * 5 + 1.0385324871008912

"""# New Section"""

import os

if os.path.exists('data_train.csv'):
    print('File exists')
else:
    print('File does not exist')
